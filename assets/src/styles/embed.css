@import 'tailwindcss';

@plugin 'daisyui' {
  themes: night, cupcake;
}

@config '../../../tailwind.config.js';

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@utility loading-elipsis {
  &::after {
    overflow: hidden;
    animation: ellipsis steps(4, end) 1500ms infinite;
    content: '...';
    width: 0;
    display: inline-block;
    vertical-align: bottom;
  }
}

@utility popin {
  animation: popin 200ms;
}

@utility progress-alert {
  @apply py-4 popin;
  position: relative;
  color: white;

  pre {
    @apply px-5 leading-8 whitespace-pre-wrap flex;

    &::before {
      content: '> ';

      @apply shrink-0;
    }

    &.error-summary,
    &.warn-summary {
      @apply px-5 bg-warning text-warning-content;
    }

    &.done-summary,
    &.download-summary,
    &.redirect-summary {
      @apply px-5 bg-success text-success-content;
    }

    &.inprogress,
    &.statusupdate {
      span.loader {
        @apply pl-1;
        @apply loading-elipsis;
      }
    }

    &.statusupdate {
      span.status {
        @apply pl-1;

        &::before {
          content: '(';
        }

        &::after {
          content: ')';
        }
      }
    }

    &.done,
    &.error,
    &.warn {
      span.status {
        @apply pl-1;

        &::before {
          content: '...[';
        }

        &::after {
          content: ']';
        }
      }
    }
  }

  .close {
    @apply btn btn-sm btn-accent mr-4;
  }

  &-oneline {
    @apply flex;

    pre {
      @apply flex-grow;
    }
  }
}

@layer utilities {

  @keyframes ellipsis {
    to {
      width: 2.25em;
    }
  }

  @keyframes popin {
    from {
      transform: scaleX(0.95);
      opacity: 0;
    }

    to {
      transform: scaleX(1);
      opacity: 1;
    }
  }
}
